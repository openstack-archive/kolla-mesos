# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile.custom contains user customization for the Vagrantfile
# You shouldn't have to edit the Vagrantfile, ever.
vagrant_dir = File.expand_path(File.dirname(__FILE__))
if File.exists?(File.join(vagrant_dir, 'Vagrantfile.custom'))
  eval(IO.read(File.join(vagrant_dir, 'Vagrantfile.custom')), binding)
end

# Libvirt for Linux, virtualbox for Mac OS
PROVIDER ||= "libvirt"

PROVIDER_DEFAULTS ||= {
  libvirt: {
    base_image: "centos/7",
    bridge_interface: "virbr0",
    vagrant_shared_folder: "/home/vagrant/sync",
    sync_method: "nfs",
  },
  virtualbox: {
    base_image: "centos/7",
    bridge_interface: "en0: Wi-Fi (AirPort)",
    vagrant_shared_folder: "/vagrant",
    sync_method: "virtualbox",
  },
}

def get_default(setting)
  PROVIDER_DEFAULTS[PROVIDER.to_sym][setting]
end

Vagrant.configure(2) do |config|
  config.vm.box = get_default(:base_image)

  config.vm.network "private_network", type: "dhcp"
  config.vm.network "public_network", dev: get_default(:bridge_interface), bridge: get_default(:bridge_interface), mode: 'bridge', type: 'bridge'

  config.vm.synced_folder "..", "/home/vagrant/kolla-mesos", type: get_default(:sync_method)

  config.vm.provider PROVIDER do |vm|
    vm.cpus = 4
    vm.memory = 4096
  end

  config.vm.provision :shell, path: "provision.sh"
  config.vm.provision :shell, path: "../tools/bootstrap.sh", args: "start"
end
