{% set keystone_cmd = 'apache2' if kolla_base_distro in ['ubuntu', 'debian'] else 'httpd' %}
#!/bin/bash

function trapterm() {
    sleep 1
    ps -ef | grep "{{ keystone_cmd }}"
    echo "exiting extend_start.sh (via SIGTERM)"
    exit 0
}

echo "Running keystone setup"

if [[ "${KOLLA_BASE_DISTRO}" == "ubuntu" || \
        "${KOLLA_BASE_DISTRO}" == "debian" ]]; then
    # Loading Apache2 ENV variables
    source /etc/apache2/envvars
fi

# NOTE(pbourke): httpd will not clean up after itself in some cases which
# results in the container not being able to restart. Unconfirmed if this
# happens on Ubuntu. (bug #1489676)
if [[ "${KOLLA_BASE_DISTRO}" =~ fedora|centos|oraclelinux|rhel ]]; then
    rm -rf /var/run/httpd/* /run/httpd/* /tmp/httpd*
fi

sudo -H -u keystone keystone-manage db_sync
# Start the api to set initial endpoint and users with the admin_token
echo "starting {{ keystone_cmd }} for bootstrapping"
/usr/sbin/{{ keystone_cmd }} -DFOREGROUND &
HTTPD_PID=$!

sleep 5

export PUBLIC_URL="http://{{ kolla_external_address }}:{{ keystone_public_port }}/v2.0"
export INTERNAL_URL="http://{{ kolla_internal_address }}:{{ keystone_public_port }}/v2.0"
export ADMIN_URL="http://{{ kolla_internal_address }}:{{ keystone_admin_port }}/v2.0"
export OS_URL="http://{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}:{{ keystone_admin_port }}/v2.0"

echo "calling openstack service create"
openstack service create --name keystone --description "OpenStack Identity" identity
echo "calling openstack endpoint create"
openstack endpoint create --region "{{ openstack_region_name }}" \
                                --publicurl "${PUBLIC_URL}" \
                                --internalurl "${INTERNAL_URL}" \
                                --adminurl "${ADMIN_URL}" \
                                identity
echo "calling openstack project create"
openstack project create --description "Admin Project" admin
echo "calling openstack user create"
openstack user create --password "{{ keystone_admin_password }}" admin
echo "calling openstack role create"
openstack role create admin
echo "calling openstack role add"
openstack role add --project admin --user admin admin

echo "about to kill httpd"
trap trapterm SIGTERM
kill -TERM $HTTPD_PID
echo "status $?"
sleep 1
ps -ef | grep "{{ keystone_cmd }}"
echo "exiting extend_start.sh"
exit 0
